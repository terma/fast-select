Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt    Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt        35.877          ms/op
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect  10000000  avgt        43.216          ms/op
Benchmark.case10G5R4C20S40D         1000       ObjectFastSelect   1000000  avgt        22.639          ms/op
Benchmark.case10G5R4C20S40D         1000       ObjectFastSelect  10000000  avgt        31.399          ms/op
Benchmark.case10G5R4C20S40D       100000  ArrayLayoutFastSelect   1000000  avgt        97.645          ms/op
Benchmark.case10G5R4C20S40D       100000  ArrayLayoutFastSelect  10000000  avgt       138.898          ms/op
Benchmark.case10G5R4C20S40D       100000       ObjectFastSelect   1000000  avgt        72.880          ms/op
Benchmark.case10G5R4C20S40D       100000       ObjectFastSelect  10000000  avgt       103.471          ms/op

###
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect    100000  avgt        2.305          ms/op
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       20.756          ms/op
Benchmark.case10G5R4C20S40D        10000  ArrayLayoutFastSelect    100000  avgt        3.216          ms/op
Benchmark.case10G5R4C20S40D        10000  ArrayLayoutFastSelect   1000000  avgt       24.770          ms/op
Benchmark.case10G5R4C20S40D       100000  ArrayLayoutFastSelect    100000  avgt        7.892          ms/op
Benchmark.case10G5R4C20S40D       100000  ArrayLayoutFastSelect   1000000  avgt       78.734          ms/op

###
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D          100  ArrayLayoutFastSelect   1000000  avgt       18.709          ms/op
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       21.357          ms/op
Benchmark.case10G5R4C20S40D        10000  ArrayLayoutFastSelect   1000000  avgt       23.747          ms/op

### run try catch block outside cycle for select (no benefits)
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       21.389          ms/op

### use array without range check for column data (almost no benefits)
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       20.637          ms/op

### avoid any if else when get data for array so no different types of arrays
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       19.356          ms/op

### no bloom filter direct scan (degradation x3 times)
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       69.803          ms/op

### no body with scan just bloom filter (not functional case)
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt  Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       0.201          ms/op

### cache column for request
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       12.534          ms/op

### comparison
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect   1000000  avgt       11.704          ms/op
Benchmark.case10G5R4C20S40D         1000  ArrayLayoutFastSelect  10000000  avgt       19.529          ms/op
Benchmark.case10G5R4C20S40D         1000       ObjectFastSelect   1000000  avgt       20.114          ms/op
Benchmark.case10G5R4C20S40D         1000       ObjectFastSelect  10000000  avgt       28.830          ms/op

### super block 100 and block 100
Benchmark                    (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
Benchmark.case10G5R4C20S40D          100  ArrayLayoutFastSelect  10000000  avgt       12.264          ms/op

### no more superblock as benefit not so significant 7ms on 10m

### multi group x2 and count with same filtering
Benchmark                                   (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
MultipleGroupAndCountFilteredBenchmark.test         1000  ArrayLayoutFastSelect   1000000  avgt       14.048          ms/op

### multi group x2 and count with same filtering
Benchmark                                   (blockSize)                 (impl)  (volume)  Mode  Cnt   Score   Error  Units
MultipleGroupAndCountFilteredBenchmark.test         1000  ArrayLayoutFastSelect  10000000  avgt       20.662          ms/op

### after cleanup
Benchmark                                          (blockSize)      (impl)  (volume)  Mode  Cnt   Score   Error  Units
CountBenchmark.groupAndCountFiltered10G5R4C20S40D         1000  FastSelect   1000000  avgt       15.197          ms/op
MultiGroupCountBenchmark.test                             1000  FastSelect  10000000  avgt       23.166          ms/op

### array layout 10m
293mb

### array layout 100m
2382mb

### array layout 300m
7200mb

### 100m
Benchmark                      (blockSize)      (impl)   (volume)  Mode  Cnt    Score   Error  Units
MultiGroupCountBenchmark.test         1000  FastSelect  100000000  avgt       178.775          ms/op

### prediction 300m
434 msec

### single byte array
1m - 20ms

###
Benchmark                                                     (blockSize)      (impl)  (volume)  Mode  Cnt   Score   Error  Units
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D                 1000  FastSelect   1000000  avgt    2  13.830          ms/op
SingleGroupCountBenchmark.groupAndCountFiltered10G5R4C20S40D         1000  FastSelect   1000000  avgt    2  15.168          ms/op

### plain search
Benchmark                                             (blockSize)      (impl)  (volume)  Mode  Cnt  Score   Error  Units
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D         1000  FastSelect   1000000  avgt       5.920          ms/op

### a lot of data
Benchmark                                             (blockSize)      (impl)   (volume)  Mode  Cnt    Score   Error  Units
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D        10000  FastSelect  300000000  avgt       239.217          ms/op

### blocks tree (21% for 100x10k blocks)
Benchmark                                             (blockSize1)  (blockSize2)      (impl)  (volume)  Mode  Cnt  Score   Error  Units
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D          1000          1000  FastSelect   1000000  avgt       5.550          ms/op
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D          1000          1000  FastSelect  10000000  avgt      11.070          ms/op
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D           100         10000  FastSelect 300000000  avgt     188.690          ms/op
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D          1000          1000  FastSelect 300000000  avgt     307.108          ms/op
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D           100         10000  FastSelect 300000000  avgt     215.943          ms/op

### first result for select by string
Benchmark                                       (volume)  Mode  Cnt   Score   Error  Units
SelectByStringBenchmark.countFilterOneByString   1000000  avgt       53.029          ms/op

### vectorization on -XX:+UseSuperWord (by default)
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D           100          1000  FastSelect   1000000  avgt       5.333          ms/op

### speed up for byte and short requests
Benchmark                                             (blockSize1)  (blockSize2)      (impl)  (volume)  Mode  Cnt  Score   Error  Units
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D           100          1000  FastSelect   1000000  avgt       4.742          ms/op
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D           100          1000  FastSelect  10000000  avgt       6.326          ms/op

### bit set for row checking in short
Benchmark                                             (blockSize1)  (blockSize2)      (impl)  (volume)  Mode  Cnt  Score   Error  Units
SingleGroupCountBenchmark.countFiltered10G5R4C20S40D           100          1000  FastSelect   1000000  avgt       3.889          ms/op

### control result for count - 1m = 38304

### select by one unique string
Benchmark                                           (volume)  Mode  Cnt   Score   Error  Units
SelectByStringBenchmark.countFilterOneItemByString   1000000  avgt       62.928          ms/op

### more realistic testing

Benchmark                   (blockSize)  (volume)  Mode  Cnt   Score   Error  Units
DemoBenchmark.groupByGAndR         1000   1000000  avgt       14.091          ms/op

Benchmark                      (blockSize)  (volume)  Mode  Cnt   Score   Error  Units
DemoBenchmark.groupByBsIdAndR         1000   1000000  avgt       68.541          ms/op
DemoBenchmark.groupByBsIdAndR         1000  10000000  avgt      741.230          ms/op

FastSelect prepared, volume: 10000000, mem used: 693Mb, preparation time 320256 msec

### limit 100
Benchmark                     (blockSize)  (volume)  Mode  Cnt  Score   Error  Units
DemoBenchmark.detailsByGAndR         1000   1000000  avgt       3.573          ms/op

### limit 25
Benchmark                               (blockSize)  (volume)  Mode  Cnt   Score   Error  Units
DemoBenchmark.detailsByGAndRAndSorting         1000   1000000  avgt       44.923          ms/op
Benchmark                               (blockSize)  (volume)  Mode  Cnt   Score   Error  Units
DemoBenchmark.detailsByGAndRAndSorting         1000   1000000  avgt       34.080          ms/op

### for int use range check before bin search
Benchmark                      (blockSize)  (volume)  Mode  Cnt   Score   Error  Units
DemoBenchmark.groupByBsIdAndR         1000   1000000  avgt       41.671          ms/op
DemoBenchmark.groupByBsIdAndR         1000  10000000  avgt      446.186          ms/op

### real distribution for bsid by portions
Benchmark                              (blockSize)  (volume)  Mode  Cnt    Score   Error  Units
DemoBenchmark.groupByGAndR                    1000  10000000  avgt       153.353          ms/op
DemoBenchmark.groupByBsIdAndR                 1000  10000000  avgt       156.995          ms/op
DemoBenchmark.detailsByGAndRAndSorting        1000  10000000  avgt       323.712          ms/op

### byte request use array instead of bitset
Benchmark                   (blockSize)  (volume)  Mode  Cnt   Score   Error  Units
DemoBenchmark.groupByGAndR         1000   1000000  avgt       14.988          ms/op
### more realistic distribution of prg csg
DemoBenchmark.groupByGAndR         1000   1000000  avgt       12.405          ms/op

### compare with H2 inmemory mode
Benchmark                               (blockSize)    (engine)  (volume)  Mode  Cnt     Score   Error  Units
DemoBenchmark.detailsByGAndRAndSorting         1000          H2   1000000  avgt       1422.091          ms/op
DemoBenchmark.detailsByGAndRAndSorting         1000  FastSelect   1000000  avgt         35.328          ms/op
DemoBenchmark.groupByBsIdAndR                  1000          H2   1000000  avgt       1767.386          ms/op
DemoBenchmark.groupByBsIdAndR                  1000  FastSelect   1000000  avgt         22.685          ms/op
DemoBenchmark.groupByGAndR                     1000          H2   1000000  avgt        281.696          ms/op
DemoBenchmark.groupByGAndR                     1000  FastSelect   1000000  avgt         11.773          ms/op

### mem 1m (no string data)
H2 536m
FastSelect 65m

### multithread
DemoBenchmark.groupByGAndR                    1000          H2   1000000  avgt         298.849          ms/op
DemoBenchmark.groupByGAndR                    1000  FastSelect   1000000  avgt          17.384          ms/op
DemoBenchmark.groupByGAndR_50_Threads         1000          H2   1000000  avgt       15610.221          ms/op
DemoBenchmark.groupByGAndR_50_Threads         1000  FastSelect   1000000  avgt         253.837          ms/op
DemoBenchmark.groupByGAndR_5_Threads          1000          H2   1000000  avgt        1542.280          ms/op
DemoBenchmark.groupByGAndR_5_Threads          1000  FastSelect   1000000  avgt          30.589          ms/op

### again
Benchmark                               (blockSize)    (engine)  (volume)  Mode  Cnt       Score   Error  Units
DemoBenchmark.detailsByGAndRAndSorting         1000          H2   1000000  avgt         1715.789          ms/op
DemoBenchmark.detailsByGAndRAndSorting         1000          H2  10000000  avgt       150091.064          ms/op
DemoBenchmark.detailsByGAndRAndSorting         1000  FastSelect   1000000  avgt           53.929          ms/op
DemoBenchmark.detailsByGAndRAndSorting         1000  FastSelect  10000000  avgt          335.268          ms/op

DemoBenchmark.groupByBsIdAndR                  1000          H2   1000000  avgt         1470.519          ms/op
DemoBenchmark.groupByBsIdAndR                  1000          H2  10000000  avgt       114620.526          ms/op
DemoBenchmark.groupByBsIdAndR                  1000  FastSelect   1000000  avgt           18.239          ms/op
DemoBenchmark.groupByBsIdAndR                  1000  FastSelect  10000000  avgt          187.631          ms/op

DemoBenchmark.groupByGAndR                     1000          H2   1000000  avgt          435.393          ms/op
DemoBenchmark.groupByGAndR                     1000          H2  10000000  avgt        59926.185          ms/op
DemoBenchmark.groupByGAndR                     1000  FastSelect   1000000  avgt           27.463          ms/op
DemoBenchmark.groupByGAndR                     1000  FastSelect  10000000  avgt          149.121          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000          H2   1000000  avgt         1370.655          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000          H2  10000000  avgt        66027.333          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000  FastSelect   1000000  avgt           43.065          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000  FastSelect  10000000  avgt          255.408          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000          H2   1000000  avgt        40161.392          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000          H2  10000000  avgt       465427.022          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000  FastSelect   1000000  avgt          387.122          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000  FastSelect  10000000  avgt         2614.599          ms/op

### first measure for creation
Benchmark                 (blockSize)    (engine)  (volume)  Mode  Cnt      Score   Error  Units
CreatingBenchmark.create         1000  FastSelect   1000000  avgt       32840.468          ms/op
CreatingBenchmark.create         1000  FastSelect   1000000  avgt       28327.878          ms/op <<< 12%
CreatingBenchmark.create         1000  FastSelect   1000000  avgt       27459.878          ms/op <<< 15%
CreatingBenchmark.create         1000  FastSelect   1000000  avgt       23558.073          ms/op <<< 30%

### example of result for 1M
whereGAndR: 200 from 1000
whereBsIdAndR: 0 from 1000
Check play:
{1={1=5715, 2=5714, 3=5714, 4=5714, 5=5714, 6=5715}, 2={1=5714, 2=5715, 3=5714, 4=5714, 5=5714, 6=5714}, 3={1=5715, 2=5714, 3=5715, 4=5714, 5=5714, 6=5714}, 4={1=5714, 2=5715, 3=5714, 4=5715, 5=5714, 6=5714}}
{}
25

### before
DemoBenchmark.detailsByGAndRAndSorting         1000  FastSelect   1000000  avgt       22.220          ms/op

### refactoring (perf not changed)
Benchmark                               (blockSize)    (engine)  (volume)  Mode  Cnt    Score   Error  Units
DemoBenchmark.detailsByGAndRAndSorting         1000  FastSelect   1000000  avgt        25.920          ms/op
DemoBenchmark.groupByBsIdAndR                  1000  FastSelect   1000000  avgt         0.104          ms/op
DemoBenchmark.groupByGAndR                     1000  FastSelect   1000000  avgt        10.376          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000  FastSelect   1000000  avgt        22.491          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000  FastSelect   1000000  avgt       205.508          ms/op

### new compressed type of data
Benchmark                                                         (volume)  Mode  Cnt  Score   Error  Units
SelectByStringCompressedByteBenchmark.countFilterOneItemByString   1000000  avgt       3.779          ms/op

### FS vs MongoDB (no indexes and only groupByGAndR implemented)
Benchmark                               (blockSize)    (engine)  (volume)  Mode  Cnt      Score   Error  Units
DemoBenchmark.detailsByGAndRAndSorting         1000     MongoDb   1000000  avgt          ≈ 10⁻⁵          ms/op
DemoBenchmark.detailsByGAndRAndSorting         1000  FastSelect   1000000  avgt          23.596          ms/op
DemoBenchmark.groupByBsIdAndR                  1000     MongoDb   1000000  avgt          ≈ 10⁻⁵          ms/op
DemoBenchmark.groupByBsIdAndR                  1000  FastSelect   1000000  avgt           0.107          ms/op
DemoBenchmark.groupByGAndR                     1000     MongoDb   1000000  avgt        1581.894          ms/op
DemoBenchmark.groupByGAndR                     1000  FastSelect   1000000  avgt           6.540          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000     MongoDb   1000000  avgt       45588.104          ms/op
DemoBenchmark.groupByGAndR_50_Threads          1000  FastSelect   1000000  avgt         141.030          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000     MongoDb   1000000  avgt        4082.017          ms/op
DemoBenchmark.groupByGAndR_5_Threads           1000  FastSelect   1000000  avgt          13.891          ms/op

### FS vs MongoDB (with dedicated index for prg and prr)
Benchmark                              (blockSize)    (engine)  (volume)  Mode  Cnt      Score   Error  Units
DemoBenchmark.groupByGAndR                    1000     MongoDb   1000000  avgt        1558.917          ms/op
DemoBenchmark.groupByGAndR                    1000  FastSelect   1000000  avgt           7.692          ms/op
DemoBenchmark.groupByGAndR_50_Threads         1000     MongoDb   1000000  avgt       39526.173          ms/op
DemoBenchmark.groupByGAndR_50_Threads         1000  FastSelect   1000000  avgt         152.550          ms/op
DemoBenchmark.groupByGAndR_5_Threads          1000     MongoDb   1000000  avgt        4150.435          ms/op
DemoBenchmark.groupByGAndR_5_Threads          1000  FastSelect   1000000  avgt          20.384          ms/op

### FS vs MongoDB (with compound index and profile log turned off)
Benchmark                              (blockSize)    (engine)  (volume)  Mode  Cnt      Score   Error  Units
DemoBenchmark.groupByGAndR                    1000     MongoDb   1000000  avgt        1004.130          ms/op
DemoBenchmark.groupByGAndR                    1000  FastSelect   1000000  avgt           7.197          ms/op
DemoBenchmark.groupByGAndR_50_Threads         1000     MongoDb   1000000  avgt       28987.690          ms/op
DemoBenchmark.groupByGAndR_50_Threads         1000  FastSelect   1000000  avgt         131.076          ms/op
DemoBenchmark.groupByGAndR_5_Threads          1000     MongoDb   1000000  avgt        2763.995          ms/op
DemoBenchmark.groupByGAndR_5_Threads          1000  FastSelect   1000000  avgt          16.523          ms/op

### FS vs MongoDB
DemoBenchmark.groupByWhereHugeIn                          1000     MongoDb   1000000  avgt          87.820          ms/op
DemoBenchmark.groupByWhereHugeIn                          1000  FastSelect   1000000  avgt           0.034          ms/op
DemoBenchmark.groupByWhereIn                              1000     MongoDb   1000000  avgt        2396.010          ms/op
DemoBenchmark.groupByWhereIn                              1000  FastSelect   1000000  avgt          21.943          ms/op
DemoBenchmark.groupByWhereManyHugeIn                      1000     MongoDb   1000000  avgt         151.106          ms/op
DemoBenchmark.groupByWhereManyHugeIn                      1000  FastSelect   1000000  avgt           0.084          ms/op
DemoBenchmark.groupByWhereManyIn                          1000     MongoDb   1000000  avgt        1821.709          ms/op
DemoBenchmark.groupByWhereManyIn                          1000  FastSelect   1000000  avgt          15.903          ms/op
DemoBenchmark.groupByWhereManyIn50Threads                 1000     MongoDb   1000000  avgt       45994.938          ms/op
DemoBenchmark.groupByWhereManyIn50Threads                 1000  FastSelect   1000000  avgt         346.971          ms/op
DemoBenchmark.groupByWhereManyIn5Threads                  1000     MongoDb   1000000  avgt        4430.695          ms/op
DemoBenchmark.groupByWhereManyIn5Threads                  1000  FastSelect   1000000  avgt          36.367          ms/op
DemoBenchmark.groupByWhereManyRange                       1000     MongoDb   1000000  avgt        1340.807          ms/op
DemoBenchmark.groupByWhereManyRange                       1000  FastSelect   1000000  avgt          25.019          ms/op
DemoBenchmark.groupByWhereManySimple                      1000     MongoDb   1000000  avgt           0.517          ms/op
DemoBenchmark.groupByWhereManySimple                      1000  FastSelect   1000000  avgt           0.043          ms/op
DemoBenchmark.groupByWhereRange                           1000     MongoDb   1000000  avgt        1600.680          ms/op
DemoBenchmark.groupByWhereRange                           1000  FastSelect   1000000  avgt          21.350          ms/op
DemoBenchmark.groupByWhereSimple                          1000     MongoDb   1000000  avgt         590.481          ms/op
DemoBenchmark.groupByWhereSimple                          1000  FastSelect   1000000  avgt           7.329          ms/op
DemoBenchmark.groupByWhereSimpleRangeInStringLike         1000     MongoDb   1000000  avgt         405.172          ms/op
DemoBenchmark.groupByWhereSimpleRangeInStringLike         1000  FastSelect   1000000  avgt           8.549          ms/op
DemoBenchmark.groupByWhereString                          1000     MongoDb   1000000  avgt           0.398          ms/op
DemoBenchmark.groupByWhereString                          1000  FastSelect   1000000  avgt          49.741          ms/op
DemoBenchmark.groupByWhereStringLike                      1000     MongoDb   1000000  avgt        1363.704          ms/op
DemoBenchmark.groupByWhereStringLike                      1000  FastSelect   1000000  avgt         156.684          ms/op
DemoBenchmark.selectLimit                                 1000     MongoDb   1000000  avgt           0.835          ms/op
DemoBenchmark.selectLimit                                 1000  FastSelect   1000000  avgt           0.031          ms/op
DemoBenchmark.selectOrderByLimit                          1000     MongoDb   1000000  avgt           0.817          ms/op
DemoBenchmark.selectOrderByLimit                          1000  FastSelect   1000000  avgt          28.271          ms/op

### fastSelect.copy(new Request[0])
Benchmark                    (volume)  Mode  Cnt   Score   Error  Units
CopyBenchmark.oneColumn       1000000  avgt        3.167          ms/op
CopyBenchmark.scalarColumns   1000000  avgt       26.223          ms/op

Benchmark                    (volume)  Mode  Cnt    Score   Error  Units
CopyBenchmark.oneColumn       1000000  avgt         3.822          ms/op
CopyBenchmark.scalarColumns   1000000  avgt        21.717          ms/op
CopyBenchmark.stringColumns   1000000  avgt       254.373          ms/op

### fastSelect.copy optimization for MultiByteData.copy +25%
Benchmark                    (volume)  Mode  Cnt    Score   Error  Units
CopyBenchmark.oneColumn       1000000  avgt         3.230          ms/op
CopyBenchmark.scalarColumns   1000000  avgt        23.227          ms/op
CopyBenchmark.stringColumns   1000000  avgt       192.888          ms/op

### fastSelect.copy optimization for ByteData.add +30%
Benchmark                    (volume)  Mode  Cnt    Score   Error  Units
CopyBenchmark.oneColumn       1000000  avgt         3.803          ms/op
CopyBenchmark.scalarColumns   1000000  avgt        23.269          ms/op
CopyBenchmark.stringColumns   1000000  avgt       130.495          ms/op